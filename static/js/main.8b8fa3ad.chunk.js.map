{"version":3,"sources":["components/Link/Link.styles.js","components/Link/Link.js","utils/unescapeHTML.js","components/Comment/Comment.styles.js","components/Comment/Comment.js","components/Button/Button.styles.js","components/Button/Button.js","components/Input/Input.js","containers/SubAdd/SubAdd.js","containers/SubList/SubList.styles.js","containers/SubList/SubList.js","components/Layout/Layout.styles.js","components/Layout/Layout.js","components/Paragraph/Paragraph.js","components/Heading/Heading.js","containers/Comments/Comments.styles.js","containers/Comments/Comments.js","utils/GlobalStyles.js","containers/Home/Home.js","components/Post/Post.js","containers/Posts/Posts.js","redux/reducers/comment.js","redux/reducers/post.js","redux/reducers/sub.js","redux/reducers/index.js","utils/api.js","utils/constants.js","redux/sagas/comments.js","redux/sagas/posts.js","redux/sagas/index.js","redux/index.js","utils/theme.js","utils/serviceWorker.js","index.js"],"names":["defaultStyles","css","_templateObject","_ref","theme","link","main","_ref2","visited","_ref3","large","_templateObject2","NavLinkStyled","styled","RouterNavLink","_templateObject3","LinkStyled","RouterLink","_templateObject4","AStyled","a","_templateObject5","Link","props","type","react_default","createElement","defaultProps","unescapeHTML","input","DOMParser","parseFromString","documentElement","textContent","Wrapper","div","Comment_styles_templateObject","Ul","ul","Comment_styles_templateObject2","Li","li","Comment_styles_templateObject3","CommentHTML","code","Comment_styles_templateObject4","Comment","comment","dangerouslySetInnerHTML","__html","body_html","components_Link_Link","href","concat","permalink","target","ButtonStyled","button","Button_styles_templateObject","Button","Input","Input_templateObject","connect","dispatch","_useState","useState","_useState2","Object","slicedToArray","value","setValue","onSubmit","e","preventDefault","sub","Input_Input","placeholder","onChange","components_Button_Button","SubList_styles_templateObject","SubList_styles_templateObject2","state","subs","SubList_styles_Ul","map","item","index","SubList_styles_Li","key","to","Layout_styles_templateObject","Column1","Layout_styles_templateObject2","Column2","Layout_styles_templateObject3","Layout","column1","column2","Layout_styles_Wrapper","Fragment","containers_SubAdd_SubAdd","containers_SubList_SubList","P","p","Paragraph_templateObject","baseStyles","H1","h1","Heading_templateObject","H3","h2","Heading_templateObject2","h3","Heading_templateObject3","Comments_styles_templateObject","Comments_styles_templateObject2","Comments","comments","post","isLoading","error","match","title","selftext_html","num_comments","_match$params","params","id","useEffect","components_Layout_Layout","Paragraph","Comments_styles_Ul","Comments_styles_Li","components_Comment_Comment","data","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","length","randomSub","Math","floor","random","react_router","push","Post_templateObject","Post_templateObject2","Post_templateObject3","Post","subreddit","url","created_utc","domain","author","createdAt","Date","toLocaleDateString","navigator","language","userLanguage","weekday","year","month","day","Post_Wrapper","Post_Ul","Post_Li","Posts","posts","activeSubId","payload","onClick","components_Post_Post","initialState","rootReducers","combineReducers","arguments","undefined","action","objectSpread","children","sort","b","reverse","message","toConsumableArray","Set","filter","defaultParams","method","cache","throwError","Promise","reject","Error","api","get","fetch","then","response","ok","json","status","catch","REDDIT_URL","getComments","regenerator_default","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","this","getPosts","posts_marked","rootSagas","all","takeLatest","sagas_marked","sagaMiddleware","createSagaMiddleware","middleware","persistedState","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","apply","run","subscribe","setItem","stringify","getState","color","Boolean","window","location","hostname","ReactDOM","render","styled_components_browser_esm","es","react_router_dom","path","component","exact","Home","utils_GlobalStyles","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8b8fa3ad.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { Link as RouterLink, NavLink as RouterNavLink } from 'react-router-dom';\n\nconst defaultStyles = css`\n  color: ${({ theme }) => theme.link.main};\n  text-decoration: none;\n  &:visited {\n    color: ${({ theme }) => theme.link.visited};\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${({ large }) =>\n    large &&\n    css`\n      font-size: 18px;\n    `}\n`;\n\nconst NavLinkStyled = styled(RouterNavLink)`\n  ${defaultStyles}\n`;\n\nconst LinkStyled = styled(RouterLink)`\n  ${defaultStyles}\n`;\n\nconst AStyled = styled.a`\n  ${defaultStyles}\n`;\n\nexport { LinkStyled, NavLinkStyled, AStyled };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { AStyled, LinkStyled, NavLinkStyled } from './Link.styles';\n\nconst Link = props => {\n  const { type } = props;\n\n  if (type === 'a') {\n    return <AStyled {...props} />;\n  }\n\n  if (type === 'nav') {\n    return <NavLinkStyled {...props} />;\n  }\n\n  return <LinkStyled {...props} />;\n};\n\nLink.defaultProps = {\n  type: 'link',\n};\n\nLink.propTypes = {\n  type: PropTypes.string,\n};\n\nexport default Link;\n","const unescapeHTML = input => {\n  const doc = new DOMParser().parseFromString(input, 'text/html');\n  return doc.documentElement.textContent;\n};\n\nexport default unescapeHTML;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: -10px 0 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nconst CommentHTML = styled.code`\n  font-size: 16px;\n  line-height: 22px;\n  a {\n    color: ${({ theme }) => theme.link.main};\n    text-decoration: none;\n    &:hover {\n      text-decoration: underline;\n    }\n    &:visited {\n      color: ${({ theme }) => theme.link.visited};\n    }\n  }\n  p {\n    margin: 0 0 20px 0;\n  }\n  blockquote {\n    margin: 0;\n    padding: 0 0 0 20px;\n    font-style: italic;\n  }\n`;\n\nexport { Wrapper, Ul, Li, CommentHTML };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Link from '../Link';\nimport unescapeHTML from '../../utils/unescapeHTML';\nimport { CommentHTML, Li, Ul, Wrapper } from './Comment.styles';\n\nconst Comment = ({ comment }) => (\n  <Wrapper>\n    <CommentHTML dangerouslySetInnerHTML={{ __html: unescapeHTML(comment.body_html) }} />\n    <Ul>\n      <Li>\n        <Link href={`https://old.reddit.com/${comment.permalink}`} target=\"_blank\" type=\"a\">\n          permalink\n        </Link>\n      </Li>\n    </Ul>\n  </Wrapper>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    url: PropTypes.string,\n    body: PropTypes.string,\n    body_html: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n    permalink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import styled from 'styled-components';\n\nconst ButtonStyled = styled.button`\n  background-color: #808080;\n  border-color: #808080;\n  color: #000;\n  border-radius: 2px;\n  padding: 2px 4px;\n`;\n\nexport { ButtonStyled };\n","import React from 'react';\nimport { ButtonStyled } from './Button.styles';\n\nconst Button = props => <ButtonStyled {...props} />;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 2px;\n  padding: 3px 4px;\n  border: none;\n`;\n\nexport default Input;\n","import PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\n\nconst SubAdd = ({ dispatch }) => {\n  const [value, setValue] = useState('');\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!value) {\n      return;\n    }\n\n    dispatch({ type: 'SUB_ADD', sub: value });\n    setValue('');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Input type=\"text\" placeholder=\"Add subreddit\" value={value} onChange={e => setValue(e.target.value)} />{' '}\n      <Button type=\"submit\">Add</Button>\n    </form>\n  );\n};\n\nSubAdd.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(SubAdd);\n","import styled from 'styled-components';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst Li = styled.li`\n  margin: 0 0 5px 0;\n`;\n\nexport { Ul, Li };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from '../../components/Link';\nimport { Li, Ul } from './SubList.styles';\n\nconst SubList = ({ subs }) => (\n  <Ul>\n    {subs.map((item, index) => (\n      <Li key={index}>\n        <Link to={`/r/${item}`} large=\"true\">\n          {item}\n        </Link>{' '}\n      </Li>\n    ))}\n  </Ul>\n);\n\nSubList.propTypes = {\n  subs: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  subs: state.sub,\n}))(SubList);\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Column1 = styled.div`\n  width: 200px;\n  overflow: hidden;\n  position: fixed;\n  top: 25px;\n  left: 20px;\n`;\n\nconst Column2 = styled.div`\n  flex: 0 1 700px;\n  margin-left: 200px;\n`;\n\nexport { Wrapper, Column1, Column2 };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport SubAdd from '../../containers/SubAdd';\nimport SubList from '../../containers/SubList';\nimport { Column1, Column2, Wrapper } from './Layout.styles';\n\nconst Layout = ({ column1, column2 }) => (\n  <Wrapper>\n    {<Column1>{column1}</Column1>}\n    {<Column2>{column2}</Column2>}\n  </Wrapper>\n);\n\nLayout.defaultProps = {\n  column1: (\n    <>\n      <SubAdd /> <SubList />\n    </>\n  ),\n  column2: null,\n};\n\nLayout.propTypes = {\n  column1: PropTypes.node,\n  column2: PropTypes.node,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst P = styled.p`\n  color: '#f2f2f2';\n  line-height: 23px;\n  white-space: pre-line;\n`;\n\nexport default P;\n","import styled from 'styled-components';\n\nconst baseStyles = `\n  color: #f2f2f2;\n  margin: 0 0 10px 0;\n  line-height: 1.2;\n  font-weight: 200;\n`;\n\nconst H1 = styled.h1`\n  ${baseStyles}\n  font-size: 2.5rem;\n`;\n\nconst H2 = styled.h2`\n  ${baseStyles}\n  font-size: 2rem;\n`;\n\nconst H3 = styled.h3`\n  ${baseStyles}\n  font-size: 1.7rem;\n`;\n\nexport { H1, H2, H3 };\n","import styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nexport { Ul, Li };\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Comment from '../../components/Comment';\nimport Layout from '../../components/Layout';\nimport Link from '../../components/Link';\nimport P from '../../components/Paragraph';\nimport unescapeHTML from '../../utils/unescapeHTML';\nimport { CommentHTML } from '../../components/Comment/Comment.styles';\nimport { H3 } from '../../components/Heading';\nimport { Li, Ul } from './Comments.styles';\n\nconst Comments = ({ comments, post, isLoading, error, dispatch, match }) => {\n  const { title, selftext_html, permalink, num_comments } = post;\n  const { sub, id } = match.params;\n\n  useEffect(() => {\n    dispatch({ type: 'COMMENTS_REQUEST', sub, id });\n  }, []);\n\n  if (isLoading) {\n    return <Layout column2={<H3>Loading comments…</H3>} />;\n  }\n\n  if (error) {\n    return <Layout column2={<P>{error}</P>} />;\n  }\n\n  return (\n    <Layout\n      column2={\n        <>\n          <H3>{title}</H3>\n          {selftext_html && <CommentHTML dangerouslySetInnerHTML={{ __html: unescapeHTML(selftext_html) }} />}\n          <Ul>\n            <Li>{num_comments} comments</Li>\n            <Li>\n              <Link href={`https://old.reddit.com/${permalink}`} target=\"_blank\" type=\"a\">\n                permalink\n              </Link>\n            </Li>\n          </Ul>\n          {comments.map(comment => (\n            <Comment key={comment.data.id} comment={comment.data} />\n          ))}\n        </>\n      }\n    />\n  );\n};\n\nComments.defaultProps = {\n  error: null,\n};\n\nComments.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  post: PropTypes.shape({}).isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nexport default connect(state => ({\n  comments: state.comment.comments,\n  post: state.comment.post,\n  isLoading: state.comment.isLoading,\n  error: state.comment.error,\n}))(Comments);\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n    background: #292929;\n    color: #f3f3f3;\n    margin: 0;\n    padding: 20px;\n  }\n`;\nexport default GlobalStyles;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport { H1 } from '../../components/Heading';\n\nconst Home = ({ sub }) => {\n  if (sub.length) {\n    const randomSub = sub[Math.floor(Math.random() * sub.length)];\n    return <Redirect push to={`/r/${randomSub}`} />;\n  }\n\n  return (\n    <>\n      <Layout\n        column2={\n          <>\n            <H1>Casually read the most popular posts on selected subreddits</H1>\n            <P>Only posts above a certain popularity are shown and then sorted by date.</P>\n            <P>Visited links are slighty darker.</P>\n          </>\n        }\n      />\n    </>\n  );\n};\n\nHome.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(Home);\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from '../Link';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nconst Post = ({ post }) => {\n  const { id, subreddit, url, title, created_utc, domain, author, num_comments } = post;\n  const createdAt = new Date(created_utc * 1000).toLocaleDateString(navigator.language || navigator.userLanguage, {\n    weekday: 'long',\n    year: '2-digit',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  return (\n    <Wrapper>\n      <Link href={url} target=\"_blank\" type=\"a\" large>\n        {title}\n      </Link>\n      <Ul>\n        <Li>{createdAt}</Li>\n        <Li>\n          <Link to={`/comments/${subreddit}/${id}`}>comments ({num_comments})</Link>\n        </Li>\n        <Li>\n          <Link href={`https://old.reddit.com/user/${author}`} target=\"_blank\" type=\"a\">\n            {author}\n          </Link>\n        </Li>\n        <Li>\n          <Link href={`https://old.reddit.com/domain/${domain}/`} type=\"a\">\n            {domain}\n          </Link>\n        </Li>\n      </Ul>\n    </Wrapper>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    url: PropTypes.string,\n    title: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport Post from '../../components/Post';\nimport { H3 } from '../../components/Heading';\n\nconst Posts = ({ posts, activeSubId, match, isLoading, dispatch, error }) => {\n  const { id } = match.params;\n\n  useEffect(\n    () => {\n      if (id !== activeSubId) {\n        dispatch({ type: 'POSTS_REQUEST', payload: { id } });\n      }\n    },\n    [id],\n  );\n\n  if (isLoading) {\n    return <Layout column2={<H3>Loading posts from &quot;{id}&quot;…</H3>} />;\n  }\n\n  return (\n    <div>\n      <Layout\n        column2={\n          <React.Fragment>\n            <H3>\n              /r/{id} <Button onClick={() => dispatch({ type: 'SUB_REMOVE', sub: id })}>Remove</Button>\n            </H3>\n            {error && <P>{error}</P>}\n            {posts.map((item, index) => (\n              <Post key={index} post={item.data} />\n            ))}\n          </React.Fragment>\n        }\n      />\n    </div>\n  );\n};\n\nPosts.defaultProps = {\n  error: null,\n};\n\nPosts.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  activeSubId: PropTypes.string.isRequired,\n};\n\nexport default connect(state => ({\n  posts: state.post.posts,\n  activeSubId: state.post.activeSubId,\n  isLoading: state.post.isLoading,\n  error: state.post.error,\n}))(Posts);\n","const initialState = {\n  comments: [],\n  post: {},\n  isLoading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'COMMENTS_REQUEST':\n      return { ...state, post: {}, comments: [], isLoading: true, error: null };\n    case 'COMMENTS_SUCCESS':\n      return {\n        ...state,\n        post: action.data[0].data.children[0].data,\n        comments: action.data[1].data.children,\n        isLoading: false,\n      };\n    case 'COMMENTS_ERROR':\n      return { ...state, comments: [], isLoading: false, error: true };\n    default:\n      return state;\n  }\n};\n","const initialState = {\n  posts: [],\n  activeSubId: '',\n  isLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'POSTS_REQUEST':\n      return { ...state, posts: [], activeSubId: action.payload.id, isLoading: true, error: false };\n    case 'POSTS_SUCCESS': {\n      const posts = action.data.data.children.sort((a, b) => a.data.created_utc - b.data.created_utc).reverse();\n      return { ...state, posts, isLoading: false };\n    }\n    case 'POSTS_ERROR':\n      return { ...state, error: action.error.message, isLoading: false };\n    default:\n      return state;\n  }\n};\n","const initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case 'SUB_ADD':\n      return [...new Set([...state, action.sub])].sort();\n    case 'SUB_REMOVE':\n      return state.filter(item => action.sub !== item);\n    case 'SUBS_GET':\n      return state;\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport comment from './comment';\nimport post from './post';\nimport sub from './sub';\n\nconst rootReducers = combineReducers({ comment, post, sub });\n\nexport default rootReducers;\n","const defaultParams = {\n  method: 'GET',\n  cache: 'no-cache',\n};\n\nconst throwError = error => Promise.reject(new Error(error));\n\nconst api = {\n  get(url, params) {\n    return fetch(url, { ...defaultParams, params })\n      .then(response => {\n        if (!response.ok) {\n          return throwError(`${response.status} error occured.`);\n        }\n        return response.json();\n      })\n      .catch(error => throwError(error));\n  },\n};\n\nexport default api;\n","// Reddit JSON endpoint: https://github.com/reddit-archive/reddit/wiki/JSON\nexport const REDDIT_URL = 'https://ssl.reddit.com/r';\n","import api from '../../utils/api';\nimport { call, put } from 'redux-saga/effects'; // eslint-disable-line\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport function* getComments(action) {\n  const { sub, id } = action;\n  try {\n    const data = yield call(api.get, `${REDDIT_URL}/${sub}/comments/${id}/comments.json?sort=top`);\n    yield put({ type: 'COMMENTS_SUCCESS', data, sub, id });\n  } catch (error) {\n    yield put({ type: 'COMMENTS_ERROR', error, sub, id });\n  }\n}\n","import api from '../../utils/api';\nimport { call, put } from 'redux-saga/effects'; // eslint-disable-line\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport function* getPosts(action) {\n  const { id } = action.payload;\n  try {\n    const data = yield call(api.get, `${REDDIT_URL}/${id}/top.json?sort=top&t=week`);\n    yield put({ type: 'POSTS_SUCCESS', data, id });\n  } catch (error) {\n    yield put({ type: 'POSTS_ERROR', error, id });\n  }\n}\n","import { all, takeLatest } from 'redux-saga/effects';\nimport { getComments } from './comments';\nimport { getPosts } from './posts';\n\nfunction* rootSagas() {\n  yield all([takeLatest('POSTS_REQUEST', getPosts), takeLatest('COMMENTS_REQUEST', getComments)]);\n}\n\nexport default rootSagas;\n","import createSagaMiddleware from 'redux-saga';\nimport { applyMiddleware, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport rootReducers from './reducers';\nimport rootSagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(createLogger());\n}\n\nconst persistedState = {\n  sub: JSON.parse(localStorage.getItem('subs') || '[]'),\n};\n\nconst store = createStore(rootReducers, persistedState, applyMiddleware(...middleware));\nsagaMiddleware.run(rootSagas);\n\nstore.subscribe(() => {\n  localStorage.setItem('subs', JSON.stringify(store.getState().sub));\n});\n\nexport default store;\n","const theme = {\n  color: 'blue',\n  link: {\n    main: '#1d97ff',\n    visited: '#1267af',\n  },\n};\n\nexport default theme;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport Comments from './containers/Comments';\nimport GlobalStyles from './utils/GlobalStyles';\nimport Home from './containers/Home';\nimport Posts from './containers/Posts';\nimport store from './redux';\nimport theme from './utils/theme';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Provider store={store}>\n      <HashRouter>\n        <Switch>\n          <Route path=\"/r/:id\" component={Posts} />\n          <Route path=\"/comments/:sub/:id\" component={Comments} />\n          <Route path=\"/\" exact component={Home} />\n        </Switch>\n      </HashRouter>\n      <GlobalStyles />\n    </Provider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}