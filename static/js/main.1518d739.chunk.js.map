{"version":3,"sources":["components/Link/Link.styles.js","components/Link/Link.js","components/Paragraph/Paragraph.js","components/Comment/Comment.styles.js","components/Comment/Comment.js","components/Layout/Layout.styles.js","components/Layout/Layout.js","components/Button/Button.styles.js","components/Button/Button.js","components/Input/Input.js","containers/SubAdd/SubAdd.js","redux/actions/sub.js","redux/actionTypes.js","containers/SubList/SubList.styles.js","containers/SubList/SubList.js","components/Heading/Heading.js","containers/Comments/Comments.styles.js","containers/Comments/Comments.js","redux/actions/comment.js","utils/constants.js","utils/GlobalStyles.js","containers/Home/Home.js","components/Post/Post.js","redux/actions/post.js","containers/Posts/Posts.js","redux/reducers/comment.js","redux/reducers/post.js","redux/reducers/sub.js","redux/index.js","utils/serviceWorker.js","index.js"],"names":["defaultStyles","css","_templateObject","props","large","_templateObject2","NavLinkStyled","styled","RouterNavLink","_templateObject3","LinkStyled","RouterLink","_templateObject4","AStyled","a","_templateObject5","Link","type","react_default","createElement","defaultProps","P","p","Paragraph_templateObject","Wrapper","div","Comment_styles_templateObject","Ul","ul","Comment_styles_templateObject2","Li","li","Comment_styles_templateObject3","Comment","_ref","comment","Paragraph","body","components_Link_Link","href","concat","permalink","target","Layout_styles_templateObject","Column1","Layout_styles_templateObject2","Column2","Layout_styles_templateObject3","Layout","column1","column2","Layout_styles_Wrapper","ButtonStyled","button","Button_styles_templateObject","Button","Input","input","Input_templateObject","SubAdd","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","e","preventDefault","dispatch","sub","setState","_this2","onSubmit","handleSubmit","bind","Input_Input","placeholder","onChange","components_Button_Button","React","Component","connect","SubList_styles_templateObject","SubList_styles_templateObject2","SubList","SubList_styles_Ul","map","item","index","SubList_styles_Li","key","to","baseStyles","H1","h1","Heading_templateObject","H3","h2","Heading_templateObject2","h3","Heading_templateObject3","Comments_styles_templateObject","Comments_styles_templateObject2","Comments","postId","_this$props","match","params","id","fetch","then","res","ok","Error","status","json","comments","catch","err","_this$props2","post","isLoading","error","components_Layout_Layout","Fragment","containers_SubAdd_SubAdd","containers_SubList_SubList","title","num_comments","Comments_styles_Ul","Comments_styles_Li","components_Comment_Comment","data","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","Home","_React$Component","apply","arguments","inherits","createClass","length","randomSub","Math","floor","random","Redirect","push","Post_templateObject","Post_templateObject2","Post_templateObject3","Post","subreddit","url","created_utc","domain","author","createdAt","Date","toLocaleDateString","navigator","language","userLanguage","weekday","year","month","day","Post_Wrapper","Post_Ul","Post_Li","getPosts","posts","Posts","prevProps","_this$props3","onClick","components_Post_Post","initialState","reducer","combineReducers","undefined","action","assign","children","sort","b","reverse","message","includes","toConsumableArray","filter","middleware","thunk","persistedState","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","subscribe","setItem","stringify","getState","Boolean","window","location","hostname","ReactDOM","render","es","HashRouter","Switch","Route","path","component","exact","utils_GlobalStyles","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1518d739.chunk.js","sourcesContent":["import styled, { css } from 'styled-components';\nimport { Link as RouterLink, NavLink as RouterNavLink } from 'react-router-dom';\n\nconst defaultStyles = css`\n  color: #1d97ff;\n  text-decoration: none;\n  &:visited {\n    color: #125d9c;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${props =>\n    props.large &&\n    css`\n      font-size: 18px;\n    `}\n`;\n\nconst NavLinkStyled = styled(RouterNavLink)`\n  ${defaultStyles}\n`;\n\nconst LinkStyled = styled(RouterLink)`\n  ${defaultStyles}\n`;\n\nconst AStyled = styled.a`\n  ${defaultStyles}\n`;\n\nexport { LinkStyled, NavLinkStyled, AStyled };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { AStyled, LinkStyled, NavLinkStyled } from './Link.styles';\n\nconst Link = props => {\n  const { type } = props;\n\n  if (type === 'a') {\n    return <AStyled {...props} />;\n  }\n\n  if (type === 'nav') {\n    return <NavLinkStyled {...props} />;\n  }\n\n  return <LinkStyled {...props} />;\n};\n\nLink.defaultProps = {\n  type: 'link',\n};\n\nLink.propTypes = {\n  type: PropTypes.string,\n};\n\nexport default Link;\n","import styled from 'styled-components';\n\nconst P = styled.p`\n  color: '#f2f2f2';\n  line-height: 23px;\n  white-space: pre-line;\n`;\n\nexport default P;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: -10px 0 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nexport { Wrapper, Ul, Li };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Link from '../Link';\nimport P from '../Paragraph';\nimport { Li, Ul, Wrapper } from './Comment.styles';\n\nconst Comment = ({ comment }) => (\n  <Wrapper>\n    <P>{comment.body}</P>\n    <Ul>\n      <Li>\n        <Link href={`https://old.reddit.com/${comment.permalink}`} target=\"_blank\" type=\"a\">\n          permalink\n        </Link>\n      </Li>\n    </Ul>\n  </Wrapper>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    url: PropTypes.string,\n    body: PropTypes.string,\n    body_html: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n    permalink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Column1 = styled.div`\n  width: 200px;\n  overflow: hidden;\n  position: fixed;\n  top: 25px;\n  left: 15px;\n`;\n\nconst Column2 = styled.div`\n  flex: 0 1 700px;\n  margin-left: 200px;\n`;\n\nexport { Wrapper, Column1, Column2 };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Column1, Column2, Wrapper } from './Layout.styles';\n\nconst Layout = ({ column1, column2 }) => (\n  <Wrapper>\n    {column1 && <Column1>{column1}</Column1>}\n    {column2 && <Column2>{column2}</Column2>}\n  </Wrapper>\n);\n\nLayout.defaultProps = {\n  column1: null,\n  column2: null,\n};\n\nLayout.propTypes = {\n  column1: PropTypes.node,\n  column2: PropTypes.node,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst ButtonStyled = styled.button`\n  background-color: #808080;\n  border-color: #808080;\n  color: #000;\n  border-radius: 2px;\n  padding: 2px 4px;\n`;\n\nexport { ButtonStyled };\n","import React from 'react';\nimport { ButtonStyled } from './Button.styles';\n\nconst Button = props => <ButtonStyled {...props} />;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 2px;\n  padding: 3px 4px;\n  border: none;\n`;\n\nexport default Input;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { addSub } from '../../redux/actions/sub';\n\nclass SubAdd extends React.Component {\n  constructor() {\n    super();\n    this.state = { value: '' };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { dispatch } = this.props;\n    const { value } = this.state;\n\n    if (!value) return;\n\n    dispatch(addSub(value));\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)}>\n        <Input\n          type=\"text\"\n          placeholder=\"Add subreddit\"\n          value={value}\n          onChange={e => this.setState({ value: e.target.value })}\n        />{' '}\n        <Button type=\"submit\">Add</Button>\n      </form>\n    );\n  }\n}\n\nSubAdd.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(SubAdd);\n","import { SUB_ADD, SUB_REMOVE, SUBS_GET } from '../actionTypes';\n\nexport const addSub = sub => ({ type: SUB_ADD, sub });\n\nexport const removeSub = sub => ({ type: SUB_REMOVE, sub });\n\nexport const getSubs = () => getState => ({\n  type: SUBS_GET,\n  subreddits: getState().subreddits,\n});\n","/**\n * Comments\n */\nexport const COMMENTS_REQUEST = 'COMMENTS_REQUEST';\nexport const COMMENTS_SUCCESS = 'COMMENTS_SUCCESS';\nexport const COMMENTS_ERROR = 'COMMENTS_ERROR';\n\n/**\n * Posts\n */\nexport const POSTS_REQUEST = 'POSTS_REQUEST';\nexport const POSTS_SUCCESS = 'POSTS_SUCCESS';\nexport const POSTS_ERROR = 'POSTS_ERROR';\n\n/**\n * Subs\n */\nexport const SUB_ADD = 'SUB_ADD';\nexport const SUB_REMOVE = 'SUB_REMOVE';\nexport const SUBS_GET = 'SUBS_GET';\n\n/**\n * UI\n */\n","import styled from 'styled-components';\n\nconst Ul = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst Li = styled.li`\n  margin: 0 0 5px 0;\n`;\n\nexport { Ul, Li };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Link from '../../components/Link';\nimport { Li, Ul } from './SubList.styles';\n\nclass SubList extends React.Component {\n  render() {\n    const { sub } = this.props;\n\n    return (\n      <Ul>\n        {sub.map((item, index) => (\n          <Li key={index}>\n            <Link to={`/r/${item}`} large=\"true\">\n              {item}\n            </Link>{' '}\n          </Li>\n        ))}\n      </Ul>\n    );\n  }\n}\n\nSubList.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(SubList);\n","import styled from 'styled-components';\n\nconst baseStyles = `\n  color: #f2f2f2;\n  margin: 0 0 10px 0;\n  line-height: 1.2;\n  font-weight: 200;\n`;\n\nconst H1 = styled.h1`\n  ${baseStyles}\n  font-size: 2.5rem;\n`;\n\nconst H2 = styled.h2`\n  ${baseStyles}\n  font-size: 2rem;\n`;\n\nconst H3 = styled.h3`\n  ${baseStyles}\n  font-size: 1.7rem;\n`;\n\nexport { H1, H2, H3 };\n","import styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nexport { Ul, Li };\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Comment from '../../components/Comment';\nimport Layout from '../../components/Layout';\nimport Link from '../../components/Link';\nimport P from '../../components/Paragraph';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { getComments } from '../../redux/actions/comment';\nimport { H3 } from '../../components/Heading';\nimport { Li, Ul } from './Comments.styles';\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const { dispatch, match } = this.props;\n    dispatch(getComments(match.params.sub, match.params.id));\n  }\n\n  render() {\n    const { comments, post, isLoading, error } = this.props;\n\n    if (isLoading || error)\n      return (\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <P>{isLoading && 'Loading comments…'}</P>\n              <P>{error && error}</P>\n            </React.Fragment>\n          }\n        />\n      );\n\n    const { title, permalink, num_comments } = post;\n\n    return (\n      <Layout\n        column1={\n          <React.Fragment>\n            <SubAdd /> <SubList />\n          </React.Fragment>\n        }\n        column2={\n          <React.Fragment>\n            <H3>{title}</H3>\n            <Ul>\n              <Li>{num_comments} comments</Li>\n              <Li>\n                <Link href={`https://old.reddit.com/${permalink}`} target=\"_blank\" type=\"a\">\n                  permalink\n                </Link>\n              </Li>\n            </Ul>\n            {comments.map(comment => (\n              <Comment key={comment.data.id} comment={comment.data} />\n            ))}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n}\n\nComments.defaultProps = {\n  error: null,\n};\n\nComments.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  post: PropTypes.shape({}).isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nexport default connect(state => ({\n  comments: state.comment.comments,\n  post: state.comment.post,\n  isLoading: state.comment.isLoading,\n  error: state.comment.error,\n}))(Comments);\n","import { COMMENTS_ERROR, COMMENTS_REQUEST, COMMENTS_SUCCESS } from '../actionTypes';\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport const getComments = (sub, postId) => dispatch => {\n  dispatch({ type: COMMENTS_REQUEST });\n\n  return fetch(`${REDDIT_URL}/${sub}/comments/${postId}/comments.json?sort=top`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} error occured.`);\n      }\n\n      return res.json();\n    })\n    .then(comments => dispatch({ type: COMMENTS_SUCCESS, comments }))\n    .catch(err => dispatch({ type: COMMENTS_ERROR, err }));\n};\n","// Reddit JSON endpoint: https://github.com/reddit-archive/reddit/wiki/JSON\nexport const REDDIT_URL = 'https://ssl.reddit.com/r';\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n    background: #292929;\n    color: #f3f3f3;\n    margin: 0;\n    padding: 20px;\n  }\n`;\nexport default GlobalStyles;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { H1 } from '../../components/Heading';\n\nexport class Home extends React.Component {\n  render() {\n    const { sub } = this.props;\n\n    if (sub.length) {\n      const randomSub = sub[Math.floor(Math.random() * sub.length)];\n      return <Redirect push to={`/r/${randomSub}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <H1>Casually read the most popular posts on selected subreddits</H1>\n              <P>Only posts above a certain popularity are shown and then sorted by date.</P>\n              <P>Visited links are slighty darker.</P>\n            </React.Fragment>\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nHome.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(Home);\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from '../Link';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nconst Post = ({ post }) => {\n  const { id, subreddit, url, title, created_utc, domain, author, num_comments } = post;\n  const createdAt = new Date(created_utc * 1000).toLocaleDateString(navigator.language || navigator.userLanguage, {\n    weekday: 'long',\n    year: '2-digit',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  return (\n    <Wrapper>\n      <Link href={url} target=\"_blank\" type=\"a\" large>\n        {title}\n      </Link>\n      <Ul>\n        <Li>{createdAt}</Li>\n        <Li>\n          <Link to={`/comments/${subreddit}/${id}`}>comments ({num_comments})</Link>\n        </Li>\n        <Li>\n          <Link href={`https://old.reddit.com/user/${author}`} target=\"_blank\" type=\"a\">\n            {author}\n          </Link>\n        </Li>\n        <Li>\n          <Link href={`https://old.reddit.com/domain/${domain}/`} type=\"a\">\n            {domain}\n          </Link>\n        </Li>\n      </Ul>\n    </Wrapper>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    url: PropTypes.string,\n    title: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import { POSTS_ERROR, POSTS_REQUEST, POSTS_SUCCESS } from '../actionTypes';\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport const getPosts = sub => dispatch => {\n  dispatch({ type: POSTS_REQUEST });\n\n  return fetch(`${REDDIT_URL}/${sub}/top.json?sort=top&t=week`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} error occured.`);\n      }\n\n      return res.json();\n    })\n    .then(posts => dispatch({ type: POSTS_SUCCESS, posts }))\n    .catch(err => dispatch({ type: POSTS_ERROR, err }));\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport Post from '../../components/Post';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { getPosts } from '../../redux/actions/post';\nimport { H3 } from '../../components/Heading';\nimport { removeSub } from '../../redux/actions/sub';\n\nclass Posts extends React.Component {\n  componentDidMount() {\n    const { dispatch, match } = this.props;\n    dispatch(getPosts(match.params.id));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { dispatch, match } = this.props;\n\n    if (match.params.id !== prevProps.match.params.id) {\n      dispatch(getPosts(match.params.id));\n    }\n  }\n\n  render() {\n    const { match, isLoading, posts, dispatch, error } = this.props;\n\n    return (\n      <div>\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <H3>\n                /r/{match.params.id} <Button onClick={() => dispatch(removeSub(match.params.id))}>Remove</Button>\n              </H3>\n              <P>{isLoading && 'Loading'}</P>\n              <P>{error && error}</P>\n              {!isLoading && posts.map((item, index) => <Post key={index} post={item.data} />)}\n            </React.Fragment>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nPosts.defaultProps = {\n  error: null,\n};\n\nPosts.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nexport default connect(state => ({\n  posts: state.post.posts,\n  isLoading: state.post.isLoading,\n  error: state.post.error,\n}))(Posts);\n","import { COMMENTS_ERROR, COMMENTS_REQUEST, COMMENTS_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n  comments: [],\n  post: {},\n  isLoading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case COMMENTS_REQUEST:\n      return Object.assign({}, { post: {}, comments: [], isLoading: true, error: null });\n    case COMMENTS_SUCCESS:\n      return Object.assign(\n        {},\n        {\n          post: action.comments[0].data.children[0].data,\n          comments: action.comments[1].data.children,\n          isLoading: false,\n        },\n      );\n    case COMMENTS_ERROR:\n      return Object.assign({}, { comments: [], isLoading: false, error: true });\n    default:\n      return state;\n  }\n};\n","import { POSTS_ERROR, POSTS_REQUEST, POSTS_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case POSTS_REQUEST:\n      return Object.assign({}, { posts: [], isLoading: true, error: false });\n    case POSTS_SUCCESS:\n      return Object.assign(\n        {},\n        {\n          posts: action.posts.data.children.sort((a, b) => a.data.created_utc - b.data.created_utc).reverse(),\n          isLoading: false,\n        },\n      );\n    case POSTS_ERROR:\n      return Object.assign({}, { posts: [], error: action.err.message, isLoading: false });\n    default:\n      return state;\n  }\n};\n","import { SUB_ADD, SUB_REMOVE, SUBS_GET } from '../actionTypes';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SUB_ADD:\n      if (state.includes(action.sub)) return state; // prevent duplicate\n      return [...state, action.sub].sort();\n    case SUB_REMOVE:\n      return state.filter(item => action.sub !== item);\n    case SUBS_GET:\n      return state;\n    default:\n      return state;\n  }\n};\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport comment from './reducers/comment';\nimport post from './reducers/post';\nimport sub from './reducers/sub';\n\nconst reducer = combineReducers({\n  comment,\n  post,\n  sub,\n});\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(createLogger());\n}\n\nconst persistedState = {\n  sub: JSON.parse(localStorage.getItem('subs') || '[]'),\n};\n\nconst store = createStore(reducer, persistedState, applyMiddleware(...middleware));\n\nstore.subscribe(() => {\n  localStorage.setItem('subs', JSON.stringify(store.getState().sub));\n});\n\nexport default store;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Comments from './containers/Comments';\nimport GlobalStyles from './utils/GlobalStyles';\nimport Home from './containers/Home';\nimport Posts from './containers/Posts';\nimport store from './redux';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/r/:id\" component={Posts} />\n        <Route path=\"/comments/:sub/:id\" component={Comments} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </HashRouter>\n    <GlobalStyles />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}