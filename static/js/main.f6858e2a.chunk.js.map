{"version":3,"sources":["utils/GlobalStyles.js","components/Layout/Layout.js","components/Button/Button.js","components/Input/Input.js","containers/SubAdd/SubAdd.js","redux/actions/sub.js","redux/actionTypes.js","components/Link/Link.js","containers/SubList/SubList.js","components/Heading/Heading.js","containers/Home/Home.js","components/Paragraph/Paragraph.js","components/Post/Post.js","redux/actions/post.js","utils/constants.js","containers/Posts/Posts.js","redux/reducers/comment.js","redux/reducers/post.js","redux/reducers/sub.js","redux/index.js","utils/serviceWorker.js","index.js"],"names":["GlobalStyles","createGlobalStyle","_templateObject","Wrapper","styled","div","Layout_templateObject","Column1","_templateObject2","Column2","_templateObject3","Layout","_ref","column1","column2","react_default","a","createElement","defaultProps","Button","button","Button_templateObject","Input","input","Input_templateObject","SubAdd","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","e","preventDefault","dispatch","props","type","sub","setState","_this2","onSubmit","handleSubmit","bind","Input_Input","placeholder","onChange","target","Button_Button","React","Component","connect","defaultStyles","css","Link_templateObject","large","Link_templateObject2","Link","RouterNavLink","Link_templateObject3","RouterLink","_templateObject4","A","_templateObject5","SubList","map","item","index","key","Link_Link","to","concat","baseStyles","H1","h1","Heading_templateObject","H3","h2","Heading_templateObject2","h3","Heading_templateObject3","Home","_React$Component","apply","arguments","inherits","createClass","length","randomSub","Math","floor","random","Redirect","push","Fragment","components_Layout_Layout","containers_SubAdd_SubAdd","containers_SubList_SubList","P","p","Paragraph_templateObject","Post_templateObject","Meta","Post_templateObject2","Post","post","url","title","created_utc","domain","permalink","author","createdAt","Date","toLocaleDateString","navigator","language","userLanguage","weekday","year","month","day","Post_Wrapper","href","getPosts","fetch","then","res","ok","Error","status","json","posts","catch","err","Posts","_this$props","match","params","id","prevProps","_this$props2","_this$props3","isLoading","error","onClick","Paragraph","components_Post_Post","data","initialState","comments","reducer","combineReducers","comment","undefined","action","assign","children","message","includes","toConsumableArray","sort","filter","middleware","thunk","persistedState","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","subscribe","setItem","stringify","getState","Boolean","window","location","hostname","ReactDOM","render","es","HashRouter","Switch","Route","path","component","exact","utils_GlobalStyles","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f6858e2a.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n    background: #292929;\n    color: #f3f3f3;\n  }\n`;\nexport default GlobalStyles;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 0 0 50px 0;\n`;\n\nconst Column1 = styled.div`\n  flex: 0 1 200px;\n`;\n\nconst Column2 = styled.div`\n  flex: 0 1 700px;\n`;\n\nconst Layout = ({ column1, column2 }) => (\n  <Wrapper>\n    {column1 && <Column1>{column1}</Column1>}\n    {column2 && <Column2>{column2}</Column2>}\n  </Wrapper>\n);\n\nLayout.defaultProps = {\n  column1: null,\n  column2: null,\n};\n\nLayout.propTypes = {\n  column1: PropTypes.node,\n  column2: PropTypes.node,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  background-color: #808080;\n  border-color: #808080;\n  color: #000;\n  border-radius: 2px;\n  padding: 2px 4px;\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 2px;\n  padding: 3px 4px;\n  border: none;\n`;\n\nexport default Input;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { addSub } from '../../redux/actions/sub';\n\nclass SubAdd extends React.Component {\n  constructor() {\n    super();\n    this.state = { value: '' };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { dispatch } = this.props;\n    const { value } = this.state;\n\n    if (!value) return;\n\n    dispatch(addSub(value));\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)}>\n        <Input\n          type=\"text\"\n          placeholder=\"Add subreddit\"\n          value={value}\n          onChange={e => this.setState({ value: e.target.value })}\n        />{' '}\n        <Button type=\"submit\">Add</Button>\n      </form>\n    );\n  }\n}\n\nSubAdd.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(SubAdd);\n","import { SUB_ADD, SUB_REMOVE, SUBS_GET } from '../actionTypes';\n\nexport const addSub = sub => ({ type: SUB_ADD, sub });\n\nexport const removeSub = sub => ({ type: SUB_REMOVE, sub });\n\nexport const getSubs = () => getState => ({\n  type: SUBS_GET,\n  subreddits: getState().subreddits,\n});\n","/**\n * Comments\n */\nexport const COMMENTS_REQUEST = 'COMMENTS_REQUEST';\nexport const COMMENTS_SUCCESS = 'COMMENTS_SUCCESS';\nexport const COMMENTS_ERROR = 'COMMENTS_ERROR';\n\n/**\n * Posts\n */\nexport const POSTS_REQUEST = 'POSTS_REQUEST';\nexport const POSTS_SUCCESS = 'POSTS_SUCCESS';\nexport const POSTS_ERROR = 'POSTS_ERROR';\n\n/**\n * Subs\n */\nexport const SUB_ADD = 'SUB_ADD';\nexport const SUB_REMOVE = 'SUB_REMOVE';\nexport const SUBS_GET = 'SUBS_GET';\n\n/**\n * UI\n */\n","import styled, { css } from 'styled-components';\nimport { Link as RouterLink, NavLink as RouterNavLink } from 'react-router-dom';\n\nconst defaultStyles = css`\n  color: #1d97ff;\n  text-decoration: none;\n  &:visited {\n    color: #125d9c;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${props =>\n    props.large &&\n    css`\n      font-size: 18px;\n    `}\n`;\n\nconst NavLink = styled(RouterNavLink)`\n  ${defaultStyles}\n`;\n\nconst Link = styled(RouterLink)`\n  ${defaultStyles}\n`;\n\nconst A = styled.a`\n  ${defaultStyles}\n`;\n\nexport { Link, NavLink, A };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from '../../components/Link';\n\nclass SubList extends React.Component {\n  render() {\n    const { sub } = this.props;\n\n    return (\n      <ul>\n        {sub.map((item, index) => (\n          <li key={index}>\n            <Link to={`/r/${item}`} large=\"true\">\n              {item}\n            </Link>{' '}\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nSubList.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(SubList);\n","import styled from 'styled-components';\n\nconst baseStyles = `\n  color: #f2f2f2;\n  margin: 0 0 10px 0;\n  line-height: 1.2;\n  font-weight: 200;\n`;\n\nconst H1 = styled.h1`\n  ${baseStyles}\n  font-size: 2.5rem;\n`;\n\nconst H2 = styled.h2`\n  ${baseStyles}\n  font-size: 2rem;\n`;\nconst H3 = styled.h3`\n  ${baseStyles}\n  font-size: 1.7rem;\n`;\n\nexport { H1, H2, H3 };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Layout from '../../components/Layout';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { H1 } from '../../components/Heading';\n\nexport class Home extends React.Component {\n  render() {\n    const { sub } = this.props;\n\n    if (sub.length) {\n      const randomSub = sub[Math.floor(Math.random() * sub.length)];\n      return <Redirect push to={`/r/${randomSub}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <H1>Add your favorite subreddits.</H1>\n            </React.Fragment>\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nHome.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(Home);\n","import styled from 'styled-components';\n\nconst P = styled.p`\n  color: '#f2f2f2';\n`;\n\nexport default P;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { A } from '../Link';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Meta = styled.div`\n  display: block;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Post = ({ post, index }) => {\n  const { url, title, created_utc, domain, permalink, author } = post; // eslint-disable-line camelcase\n  // eslint-disable-next-line camelcase\n  const createdAt = new Date(created_utc * 1000).toLocaleDateString(navigator.language || navigator.userLanguage, {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  });\n\n  return (\n    <Wrapper>\n      <A href={url} target=\"_blank\" large>\n        {index + 1}: {title}\n      </A>{' '}\n      <A href={`https://www.reddit.com/domain/${domain}/`}>\n        <small>{domain}</small>\n      </A>\n      <Meta>\n        {createdAt} <A href={`https://www.reddit.com${permalink}`}>comments</A>{' '}\n        <A href={`https://www.reddit.com/user/${author}`}>{author}</A>{' '}\n      </Meta>\n    </Wrapper>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    url: PropTypes.string,\n    title: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n    permalink: PropTypes.string,\n  }).isRequired,\n  index: PropTypes.number.isRequired,\n};\n\nexport default Post;\n","import { POSTS_ERROR, POSTS_REQUEST, POSTS_SUCCESS } from '../actionTypes';\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport const getPosts = sub => dispatch => {\n  dispatch({ type: POSTS_REQUEST });\n\n  return fetch(`${REDDIT_URL}/${sub}/top.json?sort=top&t=week`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} error occured.`);\n      }\n\n      return res.json();\n    })\n    .then(posts => dispatch({ type: POSTS_SUCCESS, posts }))\n    .catch(err => dispatch({ type: POSTS_ERROR, err }));\n};\n","// Reddit JSON endpoint: https://github.com/reddit-archive/reddit/wiki/JSON\nexport const REDDIT_URL = 'https://www.reddit.com/r';\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport Post from '../../components/Post';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { getPosts } from '../../redux/actions/post';\nimport { H3 } from '../../components/Heading';\nimport { removeSub } from '../../redux/actions/sub';\n\nclass Posts extends React.Component {\n  componentDidMount() {\n    const { dispatch, match } = this.props;\n    dispatch(getPosts(match.params.id));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { dispatch, match } = this.props;\n\n    if (match.params.id !== prevProps.match.params.id) {\n      dispatch(getPosts(match.params.id));\n    }\n  }\n\n  render() {\n    const { match, isLoading, posts, dispatch, error } = this.props;\n\n    return (\n      <div>\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <H3>\n                /r/{match.params.id} <Button onClick={() => dispatch(removeSub(match.params.id))}>Remove</Button>\n              </H3>\n              <P>{isLoading && 'Loading'}</P>\n              <P>{error && error}</P>\n              {!isLoading && posts.map((item, index) => <Post key={index} post={item.data} index={index} />)}\n            </React.Fragment>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nPosts.defaultProps = {\n  error: null,\n};\n\nPosts.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nexport default connect(state => ({\n  posts: state.post.posts,\n  isLoading: state.post.isLoading,\n  error: state.post.error,\n}))(Posts);\n","import { COMMENTS_ERROR, COMMENTS_REQUEST, COMMENTS_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n  comments: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case COMMENTS_REQUEST:\n      return Object.assign({}, { comments: [], isLoading: true, error: null });\n    case COMMENTS_SUCCESS:\n      return Object.assign({}, { comments: action.comments, isLoading: false });\n    case COMMENTS_ERROR:\n      return Object.assign({}, { comments: [], isLoading: false, error: true });\n    default:\n      return state;\n  }\n};\n","import { POSTS_ERROR, POSTS_REQUEST, POSTS_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case POSTS_REQUEST:\n      return Object.assign({}, { posts: [], isLoading: true, error: false });\n    case POSTS_SUCCESS:\n      return Object.assign({}, { posts: action.posts.data.children, isLoading: false });\n    case POSTS_ERROR:\n      return Object.assign({}, { posts: [], error: action.err.message, isLoading: false });\n    default:\n      return state;\n  }\n};\n","import { SUB_ADD, SUB_REMOVE, SUBS_GET } from '../actionTypes';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SUB_ADD:\n      if (state.includes(action.sub)) return state; // prevent duplicate\n      return [...state, action.sub].sort();\n    case SUB_REMOVE:\n      return state.filter(item => action.sub !== item);\n    case SUBS_GET:\n      return state;\n    default:\n      return state;\n  }\n};\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport comment from './reducers/comment';\nimport post from './reducers/post';\nimport sub from './reducers/sub';\n\nconst reducer = combineReducers({\n  comment,\n  post,\n  sub,\n});\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(createLogger());\n}\n\nconst persistedState = {\n  sub: JSON.parse(localStorage.getItem('subs') || '[]'),\n};\n\nconst store = createStore(reducer, persistedState, applyMiddleware(...middleware));\n\nstore.subscribe(() => {\n  localStorage.setItem('subs', JSON.stringify(store.getState().sub));\n});\n\nexport default store;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport GlobalStyles from './utils/GlobalStyles';\nimport Home from './containers/Home';\nimport Posts from './containers/Posts';\nimport store from './redux';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/r/:id\" component={Posts} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </HashRouter>\n    <GlobalStyles />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}