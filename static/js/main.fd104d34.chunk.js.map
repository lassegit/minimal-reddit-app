{"version":3,"sources":["components/Paragraph/Paragraph.js","components/Link/Link.js","components/Comment/Comment.js","components/Layout/Layout.js","components/Button/Button.js","components/Input/Input.js","containers/SubAdd/SubAdd.js","redux/actions/sub.js","redux/actionTypes.js","containers/SubList/SubList.js","components/Heading/Heading.js","containers/Comments/Comments.js","redux/actions/comment.js","utils/constants.js","utils/GlobalStyles.js","containers/Home/Home.js","components/Post/Post.js","redux/actions/post.js","containers/Posts/Posts.js","redux/reducers/comment.js","redux/reducers/post.js","redux/reducers/sub.js","redux/index.js","utils/serviceWorker.js","index.js"],"names":["P","styled","p","_templateObject","defaultStyles","css","Link_templateObject","props","large","_templateObject2","Link","RouterNavLink","_templateObject3","RouterLink","_templateObject4","A","a","_templateObject5","Wrapper","div","Comment_templateObject","Ul","ul","Comment_templateObject2","Li","li","Comment_templateObject3","Comment","_ref","comment","react_default","createElement","Paragraph","body","href","concat","permalink","target","Layout_templateObject","Column1","Layout_templateObject2","Column2","Layout_templateObject3","Layout","column1","column2","Layout_Wrapper","defaultProps","Button","button","Button_templateObject","Input","input","Input_templateObject","SubAdd","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","e","preventDefault","dispatch","type","sub","setState","_this2","onSubmit","handleSubmit","bind","Input_Input","placeholder","onChange","Button_Button","React","Component","connect","UL","SubList_templateObject","LI","SubList_templateObject2","SubList","map","item","index","key","Link_Link","to","baseStyles","H1","h1","Heading_templateObject","H3","h2","Heading_templateObject2","h3","Heading_templateObject3","Comments_templateObject","Comments_templateObject2","Comments","postId","_this$props","match","params","id","fetch","then","res","ok","Error","status","json","comments","catch","err","_this$props2","post","isLoading","error","components_Layout_Layout","Fragment","containers_SubAdd_SubAdd","containers_SubList_SubList","title","num_comments","Comments_Ul","Comments_Li","components_Comment_Comment","data","GlobalStyles","createGlobalStyle","GlobalStyles_templateObject","Home","_React$Component","apply","arguments","inherits","createClass","length","randomSub","Math","floor","random","Redirect","push","Post_templateObject","Post_templateObject2","Post_templateObject3","Post","subreddit","url","created_utc","domain","author","createdAt","Date","toLocaleDateString","navigator","language","userLanguage","weekday","year","month","day","Post_Wrapper","Post_Ul","Post_Li","getPosts","posts","Posts","prevProps","_this$props3","onClick","components_Post_Post","initialState","reducer","combineReducers","undefined","action","assign","children","sort","b","reverse","message","includes","toConsumableArray","filter","middleware","thunk","persistedState","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","subscribe","setItem","stringify","getState","Boolean","window","location","hostname","ReactDOM","render","es","HashRouter","Switch","Route","path","component","exact","utils_GlobalStyles","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd104d34.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst P = styled.p`\n  color: '#f2f2f2';\n  line-height: 23px;\n  white-space: pre-line;\n`;\n\nexport default P;\n","import styled, { css } from 'styled-components';\nimport { Link as RouterLink, NavLink as RouterNavLink } from 'react-router-dom';\n\nconst defaultStyles = css`\n  color: #1d97ff;\n  text-decoration: none;\n  &:visited {\n    color: #125d9c;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  ${props =>\n    props.large &&\n    css`\n      font-size: 18px;\n    `}\n`;\n\nconst NavLink = styled(RouterNavLink)`\n  ${defaultStyles}\n`;\n\nconst Link = styled(RouterLink)`\n  ${defaultStyles}\n`;\n\nconst A = styled.a`\n  ${defaultStyles}\n`;\n\nexport { Link, NavLink, A };\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport P from '../Paragraph';\nimport { A } from '../Link';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: -10px 0 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nconst Comment = ({ comment }) => (\n  <Wrapper>\n    <P>{comment.body}</P>\n    <Ul>\n      <Li>\n        <A href={`https://old.reddit.com/${comment.permalink}`} target=\"_blank\">\n          permalink\n        </A>\n      </Li>\n    </Ul>\n  </Wrapper>\n);\n\nComment.propTypes = {\n  comment: PropTypes.shape({\n    url: PropTypes.string,\n    body: PropTypes.string,\n    body_html: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n    permalink: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Comment;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  display: flex;\n`;\n\nconst Column1 = styled.div`\n  flex: 0 1 200px;\n  height: 99vh;\n  position: -webkit-sticky;\n  position: sticky;\n  top: 10px;\n  left: 10px;\n`;\n\nconst Column2 = styled.div`\n  flex: 0 1 700px;\n  margin-bottom: 50px;\n`;\n\nconst Layout = ({ column1, column2 }) => (\n  <Wrapper>\n    {column1 && <Column1>{column1}</Column1>}\n    {column2 && <Column2>{column2}</Column2>}\n  </Wrapper>\n);\n\nLayout.defaultProps = {\n  column1: null,\n  column2: null,\n};\n\nLayout.propTypes = {\n  column1: PropTypes.node,\n  column2: PropTypes.node,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nconst Button = styled.button`\n  background-color: #808080;\n  border-color: #808080;\n  color: #000;\n  border-radius: 2px;\n  padding: 2px 4px;\n`;\n\nexport default Button;\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  border-radius: 2px;\n  padding: 3px 4px;\n  border: none;\n`;\n\nexport default Input;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Input from '../../components/Input';\nimport { addSub } from '../../redux/actions/sub';\n\nclass SubAdd extends React.Component {\n  constructor() {\n    super();\n    this.state = { value: '' };\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { dispatch } = this.props;\n    const { value } = this.state;\n\n    if (!value) return;\n\n    dispatch(addSub(value));\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit.bind(this)}>\n        <Input\n          type=\"text\"\n          placeholder=\"Add subreddit\"\n          value={value}\n          onChange={e => this.setState({ value: e.target.value })}\n        />{' '}\n        <Button type=\"submit\">Add</Button>\n      </form>\n    );\n  }\n}\n\nSubAdd.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n};\n\nexport default connect()(SubAdd);\n","import { SUB_ADD, SUB_REMOVE, SUBS_GET } from '../actionTypes';\n\nexport const addSub = sub => ({ type: SUB_ADD, sub });\n\nexport const removeSub = sub => ({ type: SUB_REMOVE, sub });\n\nexport const getSubs = () => getState => ({\n  type: SUBS_GET,\n  subreddits: getState().subreddits,\n});\n","/**\n * Comments\n */\nexport const COMMENTS_REQUEST = 'COMMENTS_REQUEST';\nexport const COMMENTS_SUCCESS = 'COMMENTS_SUCCESS';\nexport const COMMENTS_ERROR = 'COMMENTS_ERROR';\n\n/**\n * Posts\n */\nexport const POSTS_REQUEST = 'POSTS_REQUEST';\nexport const POSTS_SUCCESS = 'POSTS_SUCCESS';\nexport const POSTS_ERROR = 'POSTS_ERROR';\n\n/**\n * Subs\n */\nexport const SUB_ADD = 'SUB_ADD';\nexport const SUB_REMOVE = 'SUB_REMOVE';\nexport const SUBS_GET = 'SUBS_GET';\n\n/**\n * UI\n */\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { Link } from '../../components/Link';\n\nconst UL = styled.ul`\n  list-style: none;\n  padding: 0;\n`;\n\nconst LI = styled.li`\n  margin: 0 0 5px 0;\n`;\n\nclass SubList extends React.Component {\n  render() {\n    const { sub } = this.props;\n\n    return (\n      <UL>\n        {sub.map((item, index) => (\n          <LI key={index}>\n            <Link to={`/r/${item}`} large=\"true\">\n              {item}\n            </Link>{' '}\n          </LI>\n        ))}\n      </UL>\n    );\n  }\n}\n\nSubList.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(SubList);\n","import styled from 'styled-components';\n\nconst baseStyles = `\n  color: #f2f2f2;\n  margin: 0 0 10px 0;\n  line-height: 1.2;\n  font-weight: 200;\n`;\n\nconst H1 = styled.h1`\n  ${baseStyles}\n  font-size: 2.5rem;\n`;\n\nconst H2 = styled.h2`\n  ${baseStyles}\n  font-size: 2rem;\n`;\nconst H3 = styled.h3`\n  ${baseStyles}\n  font-size: 1.7rem;\n`;\n\nexport { H1, H2, H3 };\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport Comment from '../../components/Comment';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { A } from '../../components/Link';\nimport { getComments } from '../../redux/actions/comment';\nimport { H3 } from '../../components/Heading';\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nclass Comments extends React.Component {\n  componentDidMount() {\n    const { dispatch, match } = this.props;\n    dispatch(getComments(match.params.sub, match.params.id));\n  }\n\n  render() {\n    const { comments, post, isLoading, error } = this.props;\n\n    if (isLoading || error)\n      return (\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <P>{isLoading && 'Loading comments…'}</P>\n              <P>{error && error}</P>\n            </React.Fragment>\n          }\n        />\n      );\n\n    const { title, permalink, num_comments } = post;\n\n    return (\n      <Layout\n        column1={\n          <React.Fragment>\n            <SubAdd /> <SubList />\n          </React.Fragment>\n        }\n        column2={\n          <React.Fragment>\n            <H3>{title}</H3>\n            <Ul>\n              <Li>{num_comments} comments</Li>\n              <Li>\n                <A href={`https://old.reddit.com/${permalink}`} target=\"_blank\">\n                  permalink\n                </A>\n              </Li>\n            </Ul>\n            {comments.map(comment => (\n              <Comment key={comment.data.id} comment={comment.data} />\n            ))}\n          </React.Fragment>\n        }\n      />\n    );\n  }\n}\n\nComments.defaultProps = {\n  error: null,\n};\n\nComments.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  post: PropTypes.shape({}).isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nexport default connect(state => ({\n  comments: state.comment.comments,\n  post: state.comment.post,\n  isLoading: state.comment.isLoading,\n  error: state.comment.error,\n}))(Comments);\n","import { COMMENTS_ERROR, COMMENTS_REQUEST, COMMENTS_SUCCESS } from '../actionTypes';\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport const getComments = (sub, postId) => dispatch => {\n  dispatch({ type: COMMENTS_REQUEST });\n\n  return fetch(`${REDDIT_URL}/${sub}/comments/${postId}/comments.json?sort=top`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} error occured.`);\n      }\n\n      return res.json();\n    })\n    .then(comments => dispatch({ type: COMMENTS_SUCCESS, comments }))\n    .catch(err => dispatch({ type: COMMENTS_ERROR, err }));\n};\n","// Reddit JSON endpoint: https://github.com/reddit-archive/reddit/wiki/JSON\nexport const REDDIT_URL = 'https://ssl.reddit.com/r';\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;\n    background: #292929;\n    color: #f3f3f3;\n    margin: 0;\n    padding: 0;\n  }\n`;\nexport default GlobalStyles;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { H1 } from '../../components/Heading';\n\nexport class Home extends React.Component {\n  render() {\n    const { sub } = this.props;\n\n    if (sub.length) {\n      const randomSub = sub[Math.floor(Math.random() * sub.length)];\n      return <Redirect push to={`/r/${randomSub}`} />;\n    }\n\n    return (\n      <React.Fragment>\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <H1>Casually read the most popular posts on selected subreddits</H1>\n              <P>Only posts above a certain popularity are shown and then sorted by date.</P>\n              <P>Visited links are slighty darker.</P>\n            </React.Fragment>\n          }\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nHome.propTypes = {\n  sub: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default connect(state => ({\n  sub: state.sub,\n}))(Home);\n","/* eslint-disable camelcase */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { A, Link } from '../Link';\n\nconst Wrapper = styled.div`\n  display: block;\n  margin: 15px 0;\n  padding: 15px 0;\n  border-bottom: 1px dashed #ddd;\n`;\n\nconst Ul = styled.ul`\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  margin: 5px 0;\n  font-size: 12px;\n`;\n\nconst Li = styled.li`\n  margin-right: 10px;\n`;\n\nconst Post = ({ post }) => {\n  const { id, subreddit, url, title, created_utc, domain, author, num_comments } = post;\n  const createdAt = new Date(created_utc * 1000).toLocaleDateString(navigator.language || navigator.userLanguage, {\n    weekday: 'long',\n    year: '2-digit',\n    month: 'short',\n    day: 'numeric',\n  });\n\n  return (\n    <Wrapper>\n      <A href={url} target=\"_blank\" large>\n        {title}\n      </A>\n      <Ul>\n        <Li>{createdAt}</Li>\n        <Li>\n          <Link to={`/comments/${subreddit}/${id}`}>comments ({num_comments})</Link>\n        </Li>\n        <Li>\n          <A href={`https://old.reddit.com/user/${author}`} target=\"_blank\">\n            {author}\n          </A>\n        </Li>\n        <Li>\n          <A href={`https://old.reddit.com/domain/${domain}/`}>{domain}</A>\n        </Li>\n      </Ul>\n    </Wrapper>\n  );\n};\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    url: PropTypes.string,\n    title: PropTypes.string,\n    domain: PropTypes.string,\n    created_utc: PropTypes.number,\n    author: PropTypes.string,\n  }).isRequired,\n};\n\nexport default Post;\n","import { POSTS_ERROR, POSTS_REQUEST, POSTS_SUCCESS } from '../actionTypes';\nimport { REDDIT_URL } from '../../utils/constants';\n\nexport const getPosts = sub => dispatch => {\n  dispatch({ type: POSTS_REQUEST });\n\n  return fetch(`${REDDIT_URL}/${sub}/top.json?sort=top&t=week`)\n    .then(res => {\n      if (!res.ok) {\n        throw new Error(`${res.status} error occured.`);\n      }\n\n      return res.json();\n    })\n    .then(posts => dispatch({ type: POSTS_SUCCESS, posts }))\n    .catch(err => dispatch({ type: POSTS_ERROR, err }));\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Button from '../../components/Button';\nimport Layout from '../../components/Layout';\nimport P from '../../components/Paragraph';\nimport Post from '../../components/Post';\nimport SubAdd from '../SubAdd';\nimport SubList from '../SubList';\nimport { getPosts } from '../../redux/actions/post';\nimport { H3 } from '../../components/Heading';\nimport { removeSub } from '../../redux/actions/sub';\n\nclass Posts extends React.Component {\n  componentDidMount() {\n    const { dispatch, match } = this.props;\n    dispatch(getPosts(match.params.id));\n  }\n\n  componentDidUpdate(prevProps) {\n    const { dispatch, match } = this.props;\n\n    if (match.params.id !== prevProps.match.params.id) {\n      dispatch(getPosts(match.params.id));\n    }\n  }\n\n  render() {\n    const { match, isLoading, posts, dispatch, error } = this.props;\n\n    return (\n      <div>\n        <Layout\n          column1={\n            <React.Fragment>\n              <SubAdd /> <SubList />\n            </React.Fragment>\n          }\n          column2={\n            <React.Fragment>\n              <H3>\n                /r/{match.params.id} <Button onClick={() => dispatch(removeSub(match.params.id))}>Remove</Button>\n              </H3>\n              <P>{isLoading && 'Loading'}</P>\n              <P>{error && error}</P>\n              {!isLoading && posts.map((item, index) => <Post key={index} post={item.data} />)}\n            </React.Fragment>\n          }\n        />\n      </div>\n    );\n  }\n}\n\nPosts.defaultProps = {\n  error: null,\n};\n\nPosts.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  isLoading: PropTypes.bool.isRequired,\n  match: PropTypes.shape({}).isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  error: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n};\n\nexport default connect(state => ({\n  posts: state.post.posts,\n  isLoading: state.post.isLoading,\n  error: state.post.error,\n}))(Posts);\n","import { COMMENTS_ERROR, COMMENTS_REQUEST, COMMENTS_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n  comments: [],\n  post: {},\n  isLoading: true,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case COMMENTS_REQUEST:\n      return Object.assign({}, { post: {}, comments: [], isLoading: true, error: null });\n    case COMMENTS_SUCCESS:\n      return Object.assign(\n        {},\n        {\n          post: action.comments[0].data.children[0].data,\n          comments: action.comments[1].data.children,\n          isLoading: false,\n        },\n      );\n    case COMMENTS_ERROR:\n      return Object.assign({}, { comments: [], isLoading: false, error: true });\n    default:\n      return state;\n  }\n};\n","import { POSTS_ERROR, POSTS_REQUEST, POSTS_SUCCESS } from '../actionTypes';\n\nconst initialState = {\n  posts: [],\n  isLoading: false,\n  error: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case POSTS_REQUEST:\n      return Object.assign({}, { posts: [], isLoading: true, error: false });\n    case POSTS_SUCCESS:\n      return Object.assign(\n        {},\n        {\n          posts: action.posts.data.children.sort((a, b) => a.data.created_utc - b.data.created_utc).reverse(),\n          isLoading: false,\n        },\n      );\n    case POSTS_ERROR:\n      return Object.assign({}, { posts: [], error: action.err.message, isLoading: false });\n    default:\n      return state;\n  }\n};\n","import { SUB_ADD, SUB_REMOVE, SUBS_GET } from '../actionTypes';\n\nconst initialState = [];\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SUB_ADD:\n      if (state.includes(action.sub)) return state; // prevent duplicate\n      return [...state, action.sub].sort();\n    case SUB_REMOVE:\n      return state.filter(item => action.sub !== item);\n    case SUBS_GET:\n      return state;\n    default:\n      return state;\n  }\n};\n","import thunk from 'redux-thunk';\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport comment from './reducers/comment';\nimport post from './reducers/post';\nimport sub from './reducers/sub';\n\nconst reducer = combineReducers({\n  comment,\n  post,\n  sub,\n});\n\nconst middleware = [thunk];\nif (process.env.NODE_ENV === 'development') {\n  middleware.push(createLogger());\n}\n\nconst persistedState = {\n  sub: JSON.parse(localStorage.getItem('subs') || '[]'),\n};\n\nconst store = createStore(reducer, persistedState, applyMiddleware(...middleware));\n\nstore.subscribe(() => {\n  localStorage.setItem('subs', JSON.stringify(store.getState().sub));\n});\n\nexport default store;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Comments from './containers/Comments';\nimport GlobalStyles from './utils/GlobalStyles';\nimport Home from './containers/Home';\nimport Posts from './containers/Posts';\nimport store from './redux';\nimport * as serviceWorker from './utils/serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <HashRouter>\n      <Switch>\n        <Route path=\"/r/:id\" component={Posts} />\n        <Route path=\"/comments/:sub/:id\" component={Comments} />\n        <Route path=\"/\" exact component={Home} />\n      </Switch>\n    </HashRouter>\n    <GlobalStyles />\n  </Provider>,\n  document.getElementById('root'),\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}